$layout-gap:85px;
@while $layout-gap >= 0px {
    .margin-top-#{$layout-gap}{
        margin-top: $layout-gap;
    }
    .margin-bottom-#{$layout-gap}{
        margin-bottom: $layout-gap;
    }
    .margin-left-#{$layout-gap}{
        margin-left: $layout-gap;
    }
    .margin-right-#{$layout-gap}{
        margin-right: $layout-gap;
    }
    .padding-top-#{$layout-gap}{
        padding-top: $layout-gap;
    }
    .padding-left-#{$layout-gap}{
        padding-left: $layout-gap;
    }
    .padding-right-#{$layout-gap}{
        padding-right: $layout-gap;
    }
    .padding-bottom-#{$layout-gap}{
        padding-bottom: $layout-gap;
    }
    .margin-#{$layout-gap}{
        margin: $layout-gap;
    }
    .padding-#{$layout-gap}{
        padding:$layout-gap;
    }
    $layout-gap : $layout-gap - 5;
}
/*浮动布局*/
.float-layout{
    @each $fl in left,right {
        .float-#{$fl}{
            float: $fl;
        }
    }
}
.float-layout::after{
    //清楚浮动
    display: block;
    content: ""; 
    clear: both;
}
/*弹性布局*/
.flex-layout{
    display: flex;
    display: -webkit-flex;
    @each $val in nowrap , wrap , wrap-reverse
    {
        .flex-wrap-#{$val}{
            flex-wrap: $val;
            -webkit-flex-wrap: $val;
        }
    }
    @for $i from 1 through 12 {
        .flex-item-#{$i} {
            flex-basis: 0px;
            flex-grow: $i;
            flex-shrink: $i;
            -webkit-flex-basis:0px;
            -webkit-flex-grow: $i;
            -webkit-flex-shrink: $i;
        }
    }
    @each $var in row,row-reverse,column,column-reverse
    {   
        
        .flex-direction-#{$var}{
            flex-direction: $var;
            -webkit-flex-direction: $var;
        }
    }
    /*设置 弹性盒子里的一行的所有子元素 在 横轴的对其方式*/
    @each $var in flex-start , flex-end , center , space-between , space-around {
        .flex-justify-content-#{$var}{
            justify-content:$var;
            -webkit-justify-content:$var;
        }
    }
    /*定义flex 子项在flex容器中的当前行的纵轴方向上的对齐方式*/
    @each $var in flex-start , flex-end , center , baseline , stretch {
        .align-items-#{$var}{
            align-items: $var;
            -webkit-align-items: $var;
        }
    }
    /*设置每一个 弹性布局快[flex 子项] 的对其方式*/
    @each $var in auto, flex-start , flex-end , center,baseline,stretch {
        .align-self-#{$var}{
            align-self: $var;
            -webkit-align-self:$var;
        }
    }
}

.layout-left-min-width{
    min-width: 200px;
}
.layout-height-100{ font-weight: 500; }

.box-sizing-content{ box-sizing: content-box; }
.box-sizing-border{ box-sizing:border-box;}

#admin-narbar-top{
    position: relative;

    .target-diaplay{
        display: none;
        position: absolute;
        top: 60px;
        left: 0px;
        box-shadow: 0px 3px 6px 0px rgba(38,38,38,0.2);
        z-index: 10;
    }
}
 

.ban-bootsrap-a-style{
    text-decoration: none;
    color: black;
}
.ban-bootsrap-a-style:hover{
    text-decoration: none;
}
.ban-bootsrap-a-style:active{
    text-decoration: none;
}
.ban-bootsrap-a-style:link{
    text-decoration: none;
}

$z-index-top-max:10000;     // 一个页面最多8层 不能使用其他数字 默认为 0 
$z-index-top:1000; 
$z-index-center-max:500;
$z-index-center:250;
$z-index-bottom-max:125;
$z-index-Boundary:0;
$z-index-bottom:-75; 
$z-index-down:-25;


.z-index-top-max{
    z-index:  $z-index-top-max; // 一个页面最多8层 不能使用其他数字 默认为 0 
}
.z-index-top{
    z-index:  $z-index-top; 
} 
.z-index-center-man{
    z-index: $z-index-center-max;
}
.z-index-center{
    z-index: $z-index-center;
}
.z-index-bottom-max{
    z-index: $z-index-bottom-max;
}
.z-index-bottom{
    z-index: $z-index-bottom;
}
.z-index-down{
    z-index: $z-index-down;
}

.overflow-y-scroll{
    overflow-y: scroll;
}

.select-layout{
    >option{
        height: 25px;
        padding: 5px 0;
        font-size: 14px;
    }
}

.layout-center{
    display: block;
    margin-left: auto;
    margin-right: auto;
}

.layout-display-inline-block{
    display: inline-block;
}
.layout-display-block{
    display: block;
}
.layout-display-none{
    display: none;
}

@each $var in baseline , sub , super , top , text-top , middle , bottom , text-bottom{
    .vertical-align-#{$var}{
        vertical-align:$var;
    }
}
$letter-space:10;
@while $letter-space > 0 {
    .letter-spacing-#{$letter-space} {
        letter-spacing: $letter-space + 0px;
    }
    $letter-space: $letter-space - 1
}

.box-sizing-content{
    box-sizing: content-box;
}
.box-sizing-border{
    box-sizing: border-box;
}
