// <auto-generated />
using System;
using LabExam.DataSource;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LabExam.Migrations
{
    [DbContext(typeof(LabContext))]
    [Migration("20190126155752_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LabExam.Models.Entities.Cource", b =>
                {
                    b.Property<int>("CourceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<int>("CourceStatus");

                    b.Property<float>("Credit");

                    b.Property<string>("Introduction");

                    b.Property<int>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(300);

                    b.Property<string>("PrincipalId")
                        .HasMaxLength(100);

                    b.HasKey("CourceId");

                    b.HasIndex("ModuleId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Cource");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Institute", b =>
                {
                    b.Property<int>("InstituteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ModuleId");

                    b.Property<string>("Name")
                        .HasMaxLength(80);

                    b.HasKey("InstituteId");

                    b.HasIndex("ModuleId");

                    b.ToTable("Institute");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Module", b =>
                {
                    b.Property<int>("ModuleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddTime");

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("PrincipalId")
                        .HasMaxLength(100);

                    b.HasKey("ModuleId");

                    b.HasIndex("PrincipalId");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Principal", b =>
                {
                    b.Property<string>("PrincipalId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<string>("JobNumber")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .HasMaxLength(600);

                    b.Property<string>("Phone")
                        .HasMaxLength(100);

                    b.Property<string>("PrincipalConfig")
                        .HasMaxLength(300);

                    b.Property<int>("PrincipalStatus");

                    b.HasKey("PrincipalId");

                    b.ToTable("Principal");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Profession", b =>
                {
                    b.Property<int>("ProfessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("InstituteId");

                    b.Property<string>("Name")
                        .HasMaxLength(80);

                    b.Property<int>("ProfessionType");

                    b.HasKey("ProfessionId");

                    b.HasIndex("InstituteId");

                    b.ToTable("Professions");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Student", b =>
                {
                    b.Property<string>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(40);

                    b.Property<DateTime>("BirthDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getdate()");

                    b.Property<string>("Email")
                        .HasMaxLength(300);

                    b.Property<int>("Grade");

                    b.Property<string>("IDNumber")
                        .HasMaxLength(800);

                    b.Property<int>("InstituteId");

                    b.Property<bool>("IsPassExam");

                    b.Property<float>("MaxExamCount");

                    b.Property<float>("MaxExamScore");

                    b.Property<string>("Name")
                        .HasMaxLength(80);

                    b.Property<string>("Password")
                        .HasMaxLength(440);

                    b.Property<string>("Phone")
                        .HasMaxLength(200);

                    b.Property<int>("ProfessionId");

                    b.Property<bool>("Sex");

                    b.Property<int>("StudentType");

                    b.HasKey("StudentId");

                    b.HasIndex("ProfessionId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Cource", b =>
                {
                    b.HasOne("LabExam.Models.Entities.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("LabExam.Models.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Institute", b =>
                {
                    b.HasOne("LabExam.Models.Entities.Module", "Module")
                        .WithMany("Institutes")
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LabExam.Models.Entities.Module", b =>
                {
                    b.HasOne("LabExam.Models.Entities.Principal", "Principal")
                        .WithMany()
                        .HasForeignKey("PrincipalId");
                });

            modelBuilder.Entity("LabExam.Models.Entities.Profession", b =>
                {
                    b.HasOne("LabExam.Models.Entities.Institute", "Institute")
                        .WithMany("Professions")
                        .HasForeignKey("InstituteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("LabExam.Models.Entities.Student", b =>
                {
                    b.HasOne("LabExam.Models.Entities.Profession", "Profession")
                        .WithMany("Students")
                        .HasForeignKey("ProfessionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
