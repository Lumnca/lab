#pragma checksum "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "d48d3c21b85bb521f1e39ab2891f658f591e0c44"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Application_Index), @"mvc.1.0.view", @"/Views/Application/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Application/Index.cshtml", typeof(AspNetCore.Views_Application_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\_ViewImports.cshtml"
using LabExam;

#line default
#line hidden
#line 2 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\_ViewImports.cshtml"
using LabExam.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d48d3c21b85bb521f1e39ab2891f658f591e0c44", @"/Views/Application/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"25a346eec04c34e7426a0411470cd3c767046258", @"/Views/_ViewImports.cshtml")]
    public class Views_Application_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<LabExam.Models.Entities.Institute>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "0", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Resources/animation/Spinner-0.3s-120px.svg"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("width", new global::Microsoft.AspNetCore.Html.HtmlString("85"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("layout-center"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(55, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml"
  
    ViewData["Title"] = "实验室安全教育在线-加入申请";
    Layout = "~/Views/Shared/_BackEnd_Layout.cshtml";

#line default
#line hidden
            BeginContext(162, 441, true);
            WriteLiteral(@"<div class=""admin-searach"">
    <!-- 搜索栏 -->
    <div id=""Search-condition"" class="" bc-clr-white margin-5px  padding-15px border-little-grey-all""
         data-min-width=""1250"">
        <div class=""float-layout"">
            <span for=""moduleId"" class="" font-size-14 text-muted"">所属学院:</span>
            <select name=""Institute"" id=""Institute"" data-height=""27"" data-width=""150"" class=""font-size-13 padding-left-5px "">
                ");
            EndContext();
            BeginContext(603, 45, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "87d8d8917d38423b95a3b794cc7b4575", async() => {
                BeginContext(631, 8, true);
                WriteLiteral("-- 全部 --");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(648, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 15 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml"
                 foreach (var item in Model)
                {

#line default
#line hidden
            BeginContext(715, 20, true);
            WriteLiteral("                    ");
            EndContext();
            BeginContext(735, 53, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "539824367d9843ae89f94883a02bb8c2", async() => {
                BeginContext(770, 9, false);
#line 17 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml"
                                                 Write(item.Name);

#line default
#line hidden
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            BeginWriteTagHelperAttribute();
#line 17 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml"
                       WriteLiteral(item.InstituteId);

#line default
#line hidden
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = __tagHelperStringValueBuffer;
            __tagHelperExecutionContext.AddTagHelperAttribute("value", __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(788, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 18 "F:\四川师范大学实验室安全考试项目\lab\project\LabExam\LabExam\Views\Application\Index.cshtml"
                }

#line default
#line hidden
            BeginContext(809, 265, true);
            WriteLiteral(@"            </select>
            <span for=""moduleId"" class=""margin-left-10px font-size-14 text-muted"">学生类型:</span>
            <select name=""StudentType"" id=""StudentType"" data-height=""27"" data-width=""90"" class=""font-size-13 padding-left-5px "">
                ");
            EndContext();
            BeginContext(1074, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3d3784b4b0d64e8baf3ffd01aaeabe34", async() => {
                BeginContext(1093, 8, true);
                WriteLiteral("-- 全部 --");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1110, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(1128, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f3be6a144bf24a658b4edb1191782a43", async() => {
                BeginContext(1146, 3, true);
                WriteLiteral("本科生");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1158, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(1176, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "486a55a8f3694ef690bd5e1dfb40d122", async() => {
                BeginContext(1194, 3, true);
                WriteLiteral("研究生");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1206, 545, true);
            WriteLiteral(@"
            </select>
            <span for=""Profession"" class=""margin-left-10px font-size-14 text-muted"">所属专业:</span>
            <select name=""Profession"" id=""Profession"" data-height=""27"" data-width=""150"" class=""font-size-13 padding-left-5px ""></select>
            <span for=""ApplicationStatus"" class=""margin-left-10px font-size-14 text-muted"">申请状态:</span>
            <select name=""ApplicationStatus"" id=""ApplicationStatus"" data-height=""27"" data-width=""80""
                    class=""font-size-13 padding-left-5px "">
                ");
            EndContext();
            BeginContext(1751, 36, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "c0d9e2c6535e442ca7cfe46b315fe0f3", async() => {
                BeginContext(1770, 8, true);
                WriteLiteral("-- 全部 --");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1787, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(1805, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "95bfc4d6133148b0b14007cd0a9e1804", async() => {
                BeginContext(1823, 3, true);
                WriteLiteral("未审核");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1835, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(1853, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "ecfa00d4819845c9aa8389d3c4e0fa5b", async() => {
                BeginContext(1871, 3, true);
                WriteLiteral("已通过");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1883, 18, true);
            WriteLiteral("\r\n                ");
            EndContext();
            BeginContext(1901, 30, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "44b11508a6664447b6283c8b7f6d7785", async() => {
                BeginContext(1919, 3, true);
                WriteLiteral("未通过");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(1931, 6130, true);
            WriteLiteral(@"
            </select>
            <span for=""KeyName"" class=""margin-left-10px font-size-14 text-muted"">关键字：</span>
            <input placeholder=""学号或者姓名"" value="""" type=""text"" id=""KeyName"" name=""KeyName"" data-height=""22""
                   data-width=""150"" class=""font-size-12 padding-left-5px "">
            <button id=""search-items"" class=""float-right  btn btn-sm btn-primary"">
                <span class=""glyphicon glyphicon-search""></span>
                立即搜索
            </button>
        </div>
    </div>
    <div class="" bc-clr-white margin-5px  padding-15px border-little-grey-all"" data-min-width=""1250"">
        <span class="" font-size-14 text-muted"">学生年级:</span>
        <select name=""studentGrade"" id=""studentGrade"" data-height=""27"" data-width=""150"" class=""font-size-14 font-weight-400 padding-left-5px ""></select>
        <button class=""btn btn-sm btn-primary margin-left-30px"" onclick=""UseAll()"">
            <span class=""glyphicon glyphicon-plus""></span>
            审核全部通过 [当前选项条件]
      ");
            WriteLiteral(@"  </button>
        <button class="" btn btn-sm btn-primary"" onclick=""NotUseAll()"">
            <span class=""glyphicon glyphicon-hand-up"" ></span>
            审核全部不通过 [当前选项条件]
        </button>
        <button class="" btn btn-sm btn-default"" onclick=""Clear()"">
            <span class=""glyphicon glyphicon-remove-circle""></span>
            清空筛选条件
        </button>
    </div>
</div>
<div class="" bc-clr-white margin-5px  padding-15px border-little-grey-all"" data-min-width=""1250"">
    <table class=""table table-hover"" id=""student-list"">
        <thead>
            <tr>
                <th>编号</th>
                <th>申请学号</th>
                <th>姓名</th>
                <th>性别</th>
                <th>专业</th>
                <th>学院</th>
                <th>学生年级</th>
                <th>学生类型</th>
                <th>申请时间</th>
                <th>申请状态</th>
                <th class="" text-right"">数据操作</th>
            </tr>
        </thead>
        <tbody class=""section-items""></tbody>
    ");
            WriteLiteral(@"</table>
    <div class="" float-layout bc-clr-white padding-10px "">
        <label class="" InspageCount float-left"">
            共 <span class=""items-count"">0</span> 个申请
        </label>
        <div class="" float-right"">
            <button class="" btn-default btn btn-sm "">
                <span>第</span>
                <span class=""show-page-Index"">
                    1
                </span>
                <span>
                    /
                </span>
                <span class=""show-page-Count"">
                    12
                </span>
                <span>
                    页
                </span>
            </button>
            <button class=""First btn btn-primary btn-sm""> <span class=""glyphicon glyphicon-backward""></span>  首页</button>
            <button class=""Previous btn btn-primary btn-sm""> <span class=""glyphicon glyphicon-chevron-left""></span> 上一页</button>
            <button class=""Next btn btn-primary btn-sm"">下一页 <span class=""glyphicon glyphicon-che");
            WriteLiteral(@"vron-right""></span> </button>
            <button data-lastIndex="""" class=""Last btn btn-primary btn-sm"">尾页 <span class=""glyphicon glyphicon-forward""></span> </button>
            <select id=""pageSkipNext"" data-options=""true"" class="" margin-left-10px"" data-height=""27"" data-width=""45""></select>
            <button data-skip class=""pageSkip btn btn-sm btn-primary"">跳转</button>
        </div>
    </div>
</div>
<script id=""item-template"" type=""x-tmpl-mustache"">
    {{#items}}
    <tr>
        <td>
            <label class="" label label-primary "">
                {{index}}
            </label>
        </td>
        <td>
            {{application.studentId}}
        </td>
        <td>
            {{application.name}}
        </td>
        <td>
            {{sex}}
        </td>
        <td>
            {{proName}}
        </td>
        <td>
            {{insName}}
        </td>
        <td>
            {{application.grade}}
        </td>
        <td>
            {{type}}
        </td");
            WriteLiteral(@">
        <td>
            <small>{{addTime}}</small>
        </td>
        <td>
            {{application.idNumber}}
        </td>
        <td>
            <label class=""label label-primary"">{{status}}</label>
        </td>

        <td class="" text-right"">
            {{^isInspect}}
            <button class="" btn btn-primary btn-sm function-use"" data-item-id=""{{application.applicationJoinId}}"">
                <span class=""glyphicon glyphicon-remove""></span> 审核通过
            </button>
            <button class="" btn btn-primary btn-sm function-stop"" data-item-id=""{{application.applicationJoinId}}"">
                <span class=""glyphicon glyphicon-ok ""></span> 审核不通过
            </button>
            {{/isInspect}}
            <button class="" btn btn-primary btn-sm delete-button"" data-item-id=""{{application.applicationJoinId}}"">
                <span class=""glyphicon glyphicon-remove""></span>
                删除
            </button>
            <button class="" btn btn-default btn-sm d");
            WriteLiteral(@"etail-button"" data-item-id=""{{application.applicationJoinId}}"">
                <span class=""glyphicon glyphicon-search""></span> 详情
            </button>
        </td>
    </tr>
    {{/items}}
</script>
<div class=""modal fade "" id=""application-detail"" tabindex=""-1"" role=""dialog"">
    <div class=""modal-dialog  modal-lg"" role=""document"">

    </div>
</div>
<div class=""modal fade"" id=""program"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"" data-backdrop=""static"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
                <h4 class=""modal-title font-weight-600 font-size-14 padding-top-10px text-info"">
                    拼命加载数据中 <span id=""val-speed""></span>
                </h4>
            </div>
            <div class=""modal-body"">
                ");
            EndContext();
            BeginContext(8061, 91, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "9918a6e3d4fc4a81bc80ab65268683e9", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(8152, 5117, true);
            WriteLiteral(@"
                <p class="" text-left"">
                    <span class="" glyphicon glyphicon-cloud-upload ""></span>
                    <span id=""data-info"">疯狂拼命搬运数据中, 请勿中途关闭窗口........</span>
                </p>
            </div>
        </div>
    </div>
</div>
<div class=""modal fade"" id=""delete-dialog"" tabindex=""-1"" role=""dialog"" aria-labelledby=""myModalLabel"">
    <div class=""modal-dialog"" role=""document"">
        <div class=""modal-content"">
            <div class=""modal-header"">
                <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
                <h4 class=""modal-title font-weight-600 font-size-15 padding-top-10px text-primary"">删除提示</h4>
            </div>
            <div class=""modal-body"">
                <p class="" text-primary font-size-14"">
                    你确定要删除此资源信息吗?
                </p>
            </div>
            <div class=""modal-footer"">
                <button type=""button""");
            WriteLiteral(@" class=""btn btn-primary btn-sm"" id=""deleteButton"">
                    <span class="" glyphicon glyphicon-trash ""></span>
                    立即删除
                </button>
                <button type=""button"" class=""btn btn-default btn-sm"" data-dismiss=""modal"">
                    <span class="" glyphicon glyphicon-folder-close ""></span>
                    关闭
                </button>
            </div>
        </div>
    </div>
</div>
<script id=""detail-template"" type=""x-tmpl-mustache"">
    <div class=""modal-content"">
        <div class=""modal-header"">
            <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close""><span aria-hidden=""true"">&times;</span></button>
            <h4 class=""modal-title font-weight-600 padding-top-10px text-info"" id=""myModalLabel"">申请信息详情</h4>
        </div>
        <div class=""modal-body"" data-min-height=""300"">
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
        ");
            WriteLiteral(@"            <span class=""student-info-show-title"">昵称</span>
                    <span class=""student-info-show-value border-light-down ""> {{name}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">年级</span>
                    <span class=""student-info-show-value border-light-down ""> {{grade}} 级</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">学号</span>
                    <span class=""student-info-show-value border-light-down ""> {{id}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-s");
            WriteLiteral(@"how-title"">性别</span>
                    <span class=""student-info-show-value border-light-down ""> {{sex}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">身份</span>
                    <span class=""student-info-show-value border-light-down ""> {{type}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">学院</span>
                    <span class=""student-info-show-value border-light-down ""> {{insName}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">专业</span>
                ");
            WriteLiteral(@"    <span class=""student-info-show-value border-light-down ""> {{proName}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">电子邮件</span>
                    <span class=""student-info-show-value border-light-down ""> {{email}}</span>
                </div>
            </div>
            <div class=""student-info-show"">
                <div class=""student-info-show-content padding-left-10px"">
                    <span class=""student-info-show-title"">申请原由</span>
                    <span class=""student-info-show-value border-light-down "">
                        {{reason}}
                    </span>
                </div>
            </div>
        </div>
        <div class=""modal-footer"">
            <button type=""button"" class=""btn btn-default"" data-dismiss=""modal"">立即关闭</button>
        </div>
    </div>
</script>
");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(13288, 13143, true);
                WriteLiteral(@"
    <script>
        (function LoadYear() {
            var yearNow = new Date().getFullYear();

            $(""#studentGrade"").append('<option value=""-1"">所有年级</option>');
            for (var index = yearNow; index > 2015; index--) {
                $(""#studentGrade"")
                    .append(`<option value=""${index}"">${index}</option>`);
            }

            loadProfession();
        })();

        function loadProfession() {
            var id = $('#Institute').val();
            $.ajax({
                url: ""/Profession/ListOnlyById"",
                type: ""post"",
                dataType: ""json"",
                data: {
                    pid: id
                },
                success: function (data, textStatus, jqXHR) {
                    $(""#Profession option"").remove();
                    $(""#Profession"")
                        .append('<option value=""-1"">所有专业</option>');
                    for (var index in data.professions) {
                        $");
                WriteLiteral(@"(""#Profession"")
                            .append(
                                `<option value=""${data.professions[index].id}"">${data.professions[index].name
                                }</option>`);
                    }
                    loadPageByIndex(1);
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    onMask(""错误"", errorThrown);
                }
            });
        }

        $('#Institute').change(function (jqEvent) {
            loadProfession();
        });

        function stateManager() {
            var pageIndex = parseInt($('.show-page-Index').text().trim()); //当前页
            var pageCount = parseInt($('.show-page-Count').text().trim()); //总共多少页
            if (pageIndex >= pageCount) {
                $('.Next').prop(""disabled"", true);
            } else {
                $('.Next').prop(""disabled"", false);
            }
            if (pageIndex == 1) {
                $('.Previous').prop(""disab");
                WriteLiteral(@"led"", true);
            } else {
                $('.Previous').prop(""disabled"", false);
            }
        }

        function loadPageByIndex(index) {
            $.ajax({
                url: ""/Application/Page"",
                type: ""post"",
                dataType: ""json"",
                data: {
                    index: index,
                    iId: $('select[name=""Institute""]').val(),
                    pId: $('select[name=""Profession""]').val(),
                    status: $('select[name=""ApplicationStatus""]').val(),
                    type: $('select[name=""StudentType""]').val(),
                    keyName: $('input[name=""KeyName""]').val(),
                    grade: $('select[name=""studentGrade""]').val()
                },
                success: function (json, textStatus, jqXhr) {
                    //debug
                    console.log(json);
                    //end Debug

                    if (json.isOk) {
                        if (json.items == null");
                WriteLiteral(@") {
                            $('.section-items').html("""");
                        } else {
                            for (var i = 0; i < json.items.length; i++) {
                                json.items[i].index = (i + 1);
                            }

                            var template = $('#item-template').html();
                            Mustache.parse(template);
                            var result = Mustache.render(template, json);
                            $('.section-items').html(result);
                        }

                        $('.items-count').text(json.lineCount); //总数
                        $('.show-page-Count').text(`${json.pageCount}`); //分页总数
                        $('.show-page-Index').text(`${json.pageNowIndex}`); //当前页
                        $('button[data-lastIndex]').attr(""data-lastIndex"", json.pageCount); //最后一页 的index

                        $('select[data-options] > option').remove();
                        for (let index_ = 0; in");
                WriteLiteral(@"dex_ < json.pageCount; index_++) {
                            $('select[data-options]').append(`<option value=""${index_ + 1}"">${index_ + 1}</option>`);
                        }
                        $('select[data-options]').val(index);
                        stateManager();
                    } else {
                        onMask(""错误"", json.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    onMask(""错误"", `网络接连错误..${errorThrown}`);
                }
            });
        }

        $('.Next').click(function (jqEvent) {
            loadPageByIndex(parseInt($('.show-page-Index').text().trim()) + 1);
        });

        $('.First').click(function (jqEvent) {
            loadPageByIndex(1);
        });

        $('.Previous').click(function (jqEvent) {
            loadPageByIndex(parseInt($('.show-page-Index').text().trim()) - 1);
        });

        $('.Last').click(function (jqEvent) {
 ");
                WriteLiteral(@"           loadPageByIndex($('button[data-lastIndex]').attr(""data-lastIndex"").trim());
        });

        $('button[data-skip]').click(function (jqEvent) {
            var pageIndex = parseInt($('.show-page-Index').text().trim());
            var skip = parseInt($('select[data-options]').val().trim());
            if (skip === pageIndex) {
                onMask(""提示信息"", ""跳转页面为当前页面"");
            } else {
                loadPageByIndex($('select[data-options]').val());
            }
        });

        $('#search-items').click(function (jqEvent) {
            loadPageByIndex(1);
        });

        $('.section-items').on('click',
            "".detail-button"",
            null,
            function (jqEvent) {
                $('#program').modal('show');
                var id = $(this).attr(""data-item-id"");
                $.ajax({
                    url: ""/Application/Item"",
                    type: ""post"",
                    dataType: ""json"",
                    data: {
  ");
                WriteLiteral(@"                      apId: id
                    },
                    success: function (json) {
                        console.log(json);
                        if (json.isOk) {
                            var template = $('#detail-template').html();
                            Mustache.parse(template);
                            var result = Mustache.render(template, json.item);
                            $('#application-detail .modal-dialog').html(result);
                            $('#program').modal('hide');
                            $('#application-detail').modal('show');
                        } else {
                            onMask(json.title, json.message);
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        onMask(""错误"", `网络接连错误.. ${errorThrown}`);
                    }
                });
            });

        $('.section-items').on('click',
            "".function-sto");
                WriteLiteral(@"p"",
            null,
            function (jqEvent) {
                $('#program').modal('show');
                var id = $(this).attr(""data-item-id"");
                $.ajax({
                    url: ""/Application/Fail"",
                    type: ""post"",
                    dataType: ""json"",
                    data: {
                        apId: id
                    },
                    success: function (json) {
                        console.log(json);
                        if (json.isOk) {
                            loadPageByIndex(1);
                        }
                        $('#program').modal('hide');
                        onMask(json.title, json.message);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        onMask(""错误"", `网络接连错误.. ${errorThrown}`);
                    }
                });
            });

        $('.section-items').on('click',
            "".function-use"",
           ");
                WriteLiteral(@" null,
            function (jqEvent) {
                $('#program').modal('show');
                var id = $(this).attr(""data-item-id"");

                $.ajax({
                    url: ""/Application/Pass"",
                    type: ""post"",
                    dataType: ""json"",
                    data: {
                        apId: id
                    },
                    success: function (json) {
                        console.log(json);
                        if (json.isOk) {
                            loadPageByIndex(1);
                        } 
                        $('#program').modal('hide');
                        onMask(json.title, json.message);
                      
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        onMask(""错误"", `网络接连错误.. ${errorThrown}`);
                    }
                });
            });

        $('.section-items').on('click', '.delete-button', null, functio");
                WriteLiteral(@"n (jqEvent) {
            $('#delete-dialog button:eq(1)').attr(""data-item-id"", $(this).attr(""data-item-id""));
            $('#delete-dialog').modal('show');            
        });

        $('#delete-dialog button:eq(1)').click(function (jqEvent) {
            var id = $(this).attr('data-item-id');
            $('#delete-dialog button:eq(1)').prop(""disable"", true);
            $.ajax({
                url: ""/Application/Delete"",
                type: ""post"",
                dataType: ""json"",
                data: {
                    apId : id
                },
                success: function (json, textStatus, jqXhr) {
                    console.log(json);
                    if (json.isOk) {
                        $('#delete-dialog').modal('hide');
                        loadPageByIndex(1);
                    } else {
                        onMask(json.title, json.message);
                    }
                },
                error: function (jqXHR, textStatus, errorTh");
                WriteLiteral(@"rown) {
                    onMask(""错误"", ""网络接连错误.."");
                }
            });
        });

        function Clear() {
            $('select[name=""Institute""]').val(-1);
            $('select[name=""Profession""]').val(-1);
            $('select[name=""ApplicationStatus""]').val(-1);
            $('select[name=""StudentType""]').val(-1);
            $('input[name=""KeyName""]').val("""");
            $('select[name=""studentGrade""]').val(-1);
        }

        function UseAll() {
            $('#program').modal('show');
            $.ajax({
                url: ""/Application/All"",
                type: ""post"",
                dataType: ""json"",
                data: {
                    iId: $('select[name=""Institute""]').val(),
                    pId: $('select[name=""Profession""]').val(),
                    status: $('select[name=""ApplicationStatus""]').val(),
                    type: $('select[name=""StudentType""]').val(),
                    keyName: $('input[name=""KeyName""]').val(");
                WriteLiteral(@"),
                    grade: $('select[name=""studentGrade""]').val()
                },
                success: function (json, textStatus, jqXhr) {
                    if (json.isOk) {
                        loadPageByIndex(1);
                        $('#program').modal('hide');
                        onMask(json.title, json.message);
                    } else {
                        onMask(""错误"", json.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    onMask(""错误"", `网络接连错误..${errorThrown}`);
                }
            });
        }

        function NotUseAll() {
            $('#program').modal('show');
            $.ajax({
                url: ""/Application/Not"",
                type: ""post"",
                dataType: ""json"",
                data: {
                    iId: $('select[name=""Institute""]').val(),
                    pId: $('select[name=""Profession""]').val(),
              ");
                WriteLiteral(@"      status: $('select[name=""ApplicationStatus""]').val(),
                    type: $('select[name=""StudentType""]').val(),
                    keyName: $('input[name=""KeyName""]').val(),
                    grade: $('select[name=""studentGrade""]').val()
                },
                success: function (json, textStatus, jqXhr) {
                    if (json.isOk) {
                        loadPageByIndex(1);
                        $('#program').modal('hide');
                        onMask(json.title, json.message);
                    } else {
                        onMask(""错误"", json.message);
                    }
                },
                error: function (jqXHR, textStatus, errorThrown) {
                    onMask(""错误"", `网络接连错误..${errorThrown}`);
                }
            });
        }

    </script>
");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<LabExam.Models.Entities.Institute>> Html { get; private set; }
    }
}
#pragma warning restore 1591
